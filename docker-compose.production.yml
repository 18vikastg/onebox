version: '3.8'

services:
  # Main Application
  reachinbox-web:
    build: 
      context: .
      dockerfile: Dockerfile.web
    container_name: reachinbox-web
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    depends_on:
      - elasticsearch
      - redis
    networks:
      - reachinbox-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env

  # Email Sync Service
  reachinbox-sync:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: reachinbox-sync
    environment:
      - PYTHONPATH=/app
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    depends_on:
      - elasticsearch
      - redis
    networks:
      - reachinbox-network
    restart: unless-stopped
    volumes:
      - ./reply_vector_db:/app/reply_vector_db
      - ./logs:/app/logs
      - ./.env:/app/.env

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: reachinbox-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - cluster.name=reachinbox-cluster
      - node.name=reachinbox-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - reachinbox-network
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: reachinbox-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - reachinbox-network
    restart: unless-stopped

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: reachinbox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reachinbox-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: reachinbox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - reachinbox-web
    networks:
      - reachinbox-network
    restart: unless-stopped

volumes:
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local

networks:
  reachinbox-network:
    driver: bridge
